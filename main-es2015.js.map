{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/ServicioAPI/servicio-api.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/inicio/inicio.component.ts","./src/app/inicio/inicio.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\n// Importar environment donde se guardo la API KEY por defecto\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicioAPIService {\n\n  private imgNoDisponibleAPI: string;\n  private imgNoDisponibleLocal: string;\n\n  constructor() {\n    this.imgNoDisponibleAPI = 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif'\n    this.imgNoDisponibleLocal = `assets/Imagenes/no-disponible.png`;\n  }\n\n  /**\n   * Método para construir la url del recurso que se va a consumir\n   * luego llama al método del servicio obtenerDatosAPI()\n   * => Recibe como parámetro el id del botón \n   * @param item \n   */\n  construirUrl(item) {\n    let url = `https://gateway.marvel.com/v1/public/${item}?ts=1&apikey=${environment.apikey}&limit=100`;\n    /**\n     * Llamar método obtenerDatosAPI() propio del servicio\n     * => Recibe como parámetro la url construida\n     */\n    this.obtenerDatosAPI(url, item);\n  }\n\n\n  /**\n   * Función para hacer Get a la API, obtener una respuesta\n   * y los datos, se usa la funcionalidad fetch API interfaz propia \n   * del lenguaje JS para trabajar con el estándar HTTPRequest\n   * => Recibe como parámetro la url que se va a consumir o consultar\n   * @param url \n   */\n  obtenerDatosAPI(url, item) {\n    fetch(url)\n      .then((resp => {\n        return resp.json();\n      }))\n      .then((datos => {\n        /**\n         * Una vez obtenidos los datos llamar el método que se encargará \n         * de mostrar la información en cards dentro del contenedor principal \n         * por medio de un swicth sabrá que información mostrar.\n         */\n        switch (item) {\n          case 'characters': {\n            this.pintarCharacters(datos);\n            break;\n          }\n          case 'comics': {\n            this.pintarComics(datos);\n            break;\n          }\n          case 'creators': {\n            this.pintarCreators(datos);\n            break;\n          }\n          case 'stories':{\n            this.pintarStories(datos);\n            break;\n          }\n          case 'series': {\n            this.pintarSeries(datos);\n            break;\n          }\n          default: {\n            alert('La opción seleccionada no es válida!!');\n            break;\n          }\n        }\n        document.getElementById('loadingPage').style.display = '';\n      }))\n      .catch((error) => {\n        alert(`Hubo errores en la consulta a la API, error: \\n${error}`);\n        document.getElementById('loadingPage').style.display = '';\n      })\n  }\n\n  // Método para pintar Personajes\n  pintarCharacters(datos) {\n    const contenedor = document.getElementById('contenedorCards');\n    let templateHTML = '';\n    for (const hero of datos.data.results) {\n      if (hero.thumbnail.path === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available\") {\n        continue;\n      } else {\n      const imgHero = `${hero.thumbnail.path}.${hero.thumbnail.extension}`;\n      const urlHero = hero.urls[0].url;\n      templateHTML += `\n      <a class=\"container-cards\" href=\"${urlHero}\" target=\"_blank\" >\n        <div class=\"card\" style=\"width: 19rem;\" >\n          <div class=\"card-title\">${hero.name}</div>\n          <img src=\"${this.imgNoDisponibleAPI === imgHero ? this.imgNoDisponibleLocal : imgHero}\" class=\"imagen-character\" />\n        </div>\n      </a>\n        `;\n      }\n    }\n\n    /**\n     * Estilos para el contenedor principal\n     */\n    contenedor.style.paddingTop = \"5rem\";\n    contenedor.style.borderRadius = \".8rem\";\n    contenedor.style.background = \"#3536367a\";\n    // Agregar el template literal al contenedor que deseamos mostrar la información\n    document.querySelector('#contenedorCards').innerHTML = templateHTML;\n  }\n\n  pintarComics(datos) {\n    const contenedor = document.getElementById('contenedorCards');\n    document.getElementById('title_marvel').style.display = \"none\";\n    console.log(datos);\n    let templateHTML = \"\";\n\n    for (const hero of datos.data.results) {\n\n      if (hero.thumbnail.path === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available\") {\n        continue;\n      } else {\n        let urlHero = hero.urls[0].url;\n        templateHTML += `\n            <a class=\"container-cards\" href=\"${urlHero}\" target=\"_blank\">\n              <div class=\"card\" style=\"width: 19rem;\" >\n                  <div class=\"card-title\">${hero.title}</div><br/>\n                    <img src=\"${hero.thumbnail.path}.${hero.thumbnail.extension}\" class=\"imagen-comics\" />\n                  <div class=\"mt-8\">\n                  <span class=\"items\">Páginas: ${hero.pageCount}</span><br/>\n                  <span class=\"items\">Formato: ${hero.format}</span>\n                  </div>\n              </div>\n            </a>\n          `;\n      }\n    }\n\n    /**\n     * Estilos para el contenedor principal\n     */\n    contenedor.style.paddingTop = \"5rem\";\n    contenedor.style.borderRadius = \".8rem\";\n    contenedor.style.background = \"#3536367a\";\n    // Agregar el template literal al contenedor que deseamos mostrar la información\n    document.querySelector('#contenedorCards').innerHTML = templateHTML;\n  }\n\n  pintarStories(datos) {\n    const contenedor = document.getElementById('contenedorCards');\n    document.getElementById('title_marvel').style.display = \"none\";\n    console.log(datos);\n    let templateHTML = \"\";\n\n    for (const hero of datos.data.results) {\n      let urlHero = hero.series.collectionURI;\n      templateHTML += `\n          <div class=\"card\" style=\"width: 19rem;\" >\n              <div class=\"card-title\">${hero.originalIssue.name}</div><br/>\n              <span class=\"items\">Descripción: ${hero.title}</span>\n          </div>\n        `;\n    }\n\n    /**\n     * Estilos para el contenedor principal\n     */\n    contenedor.style.paddingTop = \"5rem\";\n    contenedor.style.borderRadius = \".8rem\";\n    contenedor.style.background = \"#3536367a\";\n    // Agregar el template literal al contenedor que deseamos mostrar la información\n    document.querySelector('#contenedorCards').innerHTML = templateHTML;\n  }\n\n  pintarSeries(datos) {\n    const contenedor = document.getElementById('contenedorCards');\n    console.log(datos);\n    let templateHTML = \"\";\n\n    for (const hero of datos.data.results) {\n\n      if (hero.thumbnail.path === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available\") {\n        continue;\n      } else {\n        let urlHero = hero.urls[0].url;\n        let url2 = `${hero.characters.collectionURI}?ts=1&apikey=${environment.apikey}`;\n        let template2 = \"\";\n\n        fetch(url2)\n          .then(res => {\n            return res.json();\n          })\n          .then(dat => {\n            for (const c of dat.data.results) {\n              template2 += ` ${c.name},`;\n\n              templateHTML += `\n                <div class=\"card\" style=\"width: 19rem;\" >\n                    <div class=\"card-title\">${hero.title}</div><br/>\n                    <span class=\"items\">Año: ${hero.endYear}</span><br/>\n                    <span class=\"items\">Personajes: ${template2}</span><br/>\n                    <a href=\"${urlHero}\" target=\"blank\">\n                      <img src=\"${hero.thumbnail.path}.${hero.thumbnail.extension}\" class=\"imagen-comics\" target=\"_blank\" />\n                    </a>\n                </div>\n              `;\n\n              /**\n              * Estilos para el contenedor principal\n              */\n              contenedor.style.paddingTop = \"5rem\";\n              contenedor.style.borderRadius = \".8rem\";\n              contenedor.style.background = \"#3536367a\";\n              // Agregar el template literal al contenedor que deseamos mostrar la información\n              document.querySelector('#contenedorCards').innerHTML = templateHTML;\n\n            }\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      }\n    }\n  }\n\n  pintarCreators(datos) {\n    const contenedor = document.getElementById('contenedorCards');\n    document.getElementById('title_marvel').style.display = \"none\";\n    console.log(datos);\n    let templateHTML = \"\";\n\n    for (const hero of datos.data.results) {\n\n      if (hero.thumbnail.path === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available\") {\n        continue;\n      } else {\n        let urlHero = hero.urls[0].url;\n        templateHTML += `\n          <a class=\"container-cards\" href=\"${urlHero}\" target=\"blank\">\n            <div class=\"card\" style=\"width: 19rem;\" >\n              <div class=\"card-title\">${hero.firstName}</div>\n              <img src=\"${hero.thumbnail.path}.${hero.thumbnail.extension}\" class=\"imagen-comics\" target=\"_blank\" />\n            </div>\n          </a>\n        `;\n      }\n    }\n\n    /**\n     * Estilos para el contenedor principal\n     */\n    contenedor.style.paddingTop = \"5rem\";\n    contenedor.style.borderRadius = \".8rem\";\n    contenedor.style.background = \"#3536367a\";\n    // Agregar el template literal al contenedor que deseamos mostrar la información\n    document.querySelector('#contenedorCards').innerHTML = templateHTML;\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { ServicioAPIService } from './ServicioAPI/servicio-api.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  /**\n   * Cargar el servicio como parámetro del constructor para poder usar\n   * sus métodos internos\n   * @param datosMarvel \n   */\n  constructor(private datosMarvel: ServicioAPIService){}\n\n  title = 'Marvel';\n  \n  mostrar_menu(){\n    document.getElementById('menu_resp').style.display = 'block';\n  }\n\n  cerrar_menu(){\n    document.getElementById('menu_resp').style.display = 'none';\n  }\n  \n  /**\n   * Método para obtener el id del botón presionado en el aside.\n   * => Recibe como parámetro un event para saber en donde se disparo el event\n   *    y así obtener el Id de los botones\n   * @param e \n   */\n  botonPresionado (e) {\n    document.getElementById('loadingPage').style.display = 'block';\n    let item;\n\n    /**\n     * Los botones están compuestos por tags <li>\n     */\n    if(e.target.localName === \"li\") {\n      item = e.target.id;\n      console.log(item);\n    }\n\n    /**\n     * Llamar función obtenerDatosCompletosXItem del servicio DatosAPIService\n     * => Recibe como parámetro el item con el id obtenido\n     */\n    this.datosMarvel.construirUrl(item);\n  }\n\n}\n","<div id=\"menu_nav\">\n  <div id=\"div_log\">\n    <img id=\"logo\" src=\"./assets/Imagenes/shield_b.png\">\n  </div>\n  <div id=\"div_list_n\">\n    <!--Modificado-->\n    <ul id=\"list_nav\" (click)=\"botonPresionado($event)\">\n      <li id=\"comics\">\n        COMICS\n      </li>\n      <li id=\"creators\">\n        CREADORES\n      </li>\n      <li id=\"characters\">\n        PERSONAJES\n      </li>\n\n      <li id=\"stories\">\n        STORIES\n      </li>\n      <li id=\"series\">\n        SERIES\n      </li>\n\n    </ul>\n  </div>\n  <div id=\"nom_app\">\n    <div id=\"titulo_app\">\n      <span>\n        HEROMARVEL\n      </span>\n    </div>\n  </div>\n</div>\n\n<div id=\"menu_nav2\">\n  <div id=\"div_log_s2\">\n    <img id=\"logo\" src=\"./assets/Imagenes/shield_b.png\">\n  </div>\n  <div id=\"title_app2\">\n    <span>\n      HEROMARVEL\n    </span>\n  </div>\n  <div id=\"img_menu\" (click)=\"mostrar_menu();\">\n    <div id=\"img\">\n      <img id=\"ico_menu\" src=\"./assets/Imagenes/menu.png\" />\n    </div>\n  </div>\n</div>\n\n<div id=\"menu_resp\">\n  <div id=\"li_titulo_mr\">\n    <span id=\"titulo_mr\">\n      HEROMARVEL\n    </span>\n    <div id=\"img_close\" (click)=\"cerrar_menu();\">\n      <img src=\"./assets/Imagenes/close.png\" style=\"width: 10px;\" />\n    </div>\n  </div>\n  <ul id=\"ul_mr\" (click)=\"botonPresionado($event)\">\n    <li class=\"item_ul_mr\" id=\"characters\">\n      PERSONAJES\n    </li>\n    <li class=\"item_ul_mr\" id=\"comics\">\n      COMICS\n    </li>\n    <li class=\"item_ul_mr\" id=\"creators\">\n      CREADORES\n    </li>\n\n    <li class=\"item_ul_mr\" id=\"stories\">\n      STORIES\n    </li>\n    <li class=\"item_ul_mr\" id=\"series\">\n      SERIES\n    </li>\n\n  </ul>\n</div>\n\n<div id=\"loadingPage\" class=\"loading\" hidden>\n  <img src=\"./assets/Imagenes/marvel_loader.gif\"/>\n</div>\n\n<div id=\"contenido\">\n    <app-inicio></app-inicio>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { InicioComponent } from './inicio/inicio.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InicioComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.css']\n})\nexport class InicioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n}\n","<div id=\"slide_inicio\">\n  <!-- Contenedor Section Principal -->\n  <div class=\"contenedor1\">\n    <div class=\"contenedor2\" id=\"contenedorCards\">\n    </div>\n  </div>\n</div>\n<div id=\"title_marvel\">\n  <span>\n    HEROMARVEL\n  </span>\n</div>","export const environment = {\n  production: false,\n  // Clave para consumir la API\n  apikey: '57af49e0876f7ff1c1145a1843a1089c&hash=4ea944eb957925a4f8d2ef14aa7adb9d'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}