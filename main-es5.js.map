{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/ServicioAPI/servicio-api.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/inicio/inicio.component.ts","webpack:///src/app/inicio/inicio.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ServicioAPIService","imgNoDisponibleAPI","imgNoDisponibleLocal","item","url","apikey","obtenerDatosAPI","fetch","resp","json","datos","setTimeout","pintarCharacters","pintarComics","pintarCreators","pintarStories","pintarSeries","alert","error","contenedor","document","getElementById","templateHTML","data","results","hero","thumbnail","path","imgHero","extension","urlHero","urls","name","style","paddingTop","borderRadius","background","querySelector","innerHTML","display","console","log","title","pageCount","format","series","collectionURI","originalIssue","url2","characters","template2","res","dat","c","endYear","err","firstName","providedIn","AppComponent","datosMarvel","target","localName","construirUrl","botonPresionado","mostrar_menu","cerrar_menu","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","InicioComponent","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\n// Importar environment donde se guardo la API KEY por defecto\nimport { environment } from 'src/environments/environment';\nimport { NgStyle } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicioAPIService {\n\n  private imgNoDisponibleAPI: string;\n  private imgNoDisponibleLocal: string;\n\n  constructor() {\n    this.imgNoDisponibleAPI = 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif'\n    this.imgNoDisponibleLocal = `assets/Imagenes/no-disponible.png`;\n  }\n\n  /**\n   * Método para construir la url del recurso que se va a consumir\n   * luego llama al método del servicio obtenerDatosAPI()\n   * => Recibe como parámetro el id del botón \n   * @param item \n   */\n  construirUrl(item) {\n    let url = `https://gateway.marvel.com/v1/public/${item}?ts=1&apikey=${environment.apikey}&limit=100`;\n    /**\n     * Llamar método obtenerDatosAPI() propio del servicio\n     * => Recibe como parámetro la url construida\n     */\n    this.obtenerDatosAPI(url, item);\n  }\n\n\n  /**\n   * Función para hacer Get a la API, obtener una respuesta\n   * y los datos, se usa la funcionalidad fetch API interfaz propia \n   * del lenguaje JS para trabajar con el estándar HTTPRequest\n   * => Recibe como parámetro la url que se va a consumir o consultar\n   * @param url \n   */\n  obtenerDatosAPI(url, item) {\n    fetch(url)\n      .then((resp => {\n        return resp.json();\n      }))\n      .then((datos => {\n        /**\n         * Una vez obtenidos los datos llamar el método que se encargará \n         * de mostrar la información en cards dentro del contenedor principal \n         * por medio de un swicth sabrá que información mostrar.\n         */\n        switch (item) {\n          case 'characters': {\n            setTimeout(() => {\n              this.pintarCharacters(datos);\n            }, 800);\n            break;\n          }\n          case 'comics': {\n            setTimeout(() => {\n              this.pintarComics(datos);\n            }, 800);\n            break;\n          }\n          case 'creators': {\n            setTimeout(() => {\n              this.pintarCreators(datos);\n            }, 800);\n            break;\n          }\n          case 'stories': {\n            setTimeout(() => {\n              this.pintarStories(datos);\n            }, 800);\n            break;\n          }\n          case 'series': {\n            setTimeout(() => {\n              this.pintarSeries(datos);\n            }, 800);\n            break;\n          }\n          default: {\n            alert('La opción seleccionada no es válida!!');\n            break;\n          }\n        }\n      }))\n      .catch((error) => {\n        alert(`Hubo errores en la consulta a la API, error: \\n${error}`);\n      })\n  }\n\n  // Método para pintar Personajes\n  pintarCharacters(datos) {\n    const contenedor = document.getElementById('contenedorCards');\n    let templateHTML = '';\n    for (const hero of datos.data.results) {\n      if (hero.thumbnail.path === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available\") {\n        continue;\n      } else {\n      const imgHero = `${hero.thumbnail.path}.${hero.thumbnail.extension}`;\n      const urlHero = hero.urls[0].url;\n      templateHTML += `\n      <a class=\"container-cards\" href=\"${urlHero}\" target=\"_blank\" >\n        <div class=\"card\" style=\"width: 19rem;\" >\n          <div class=\"card-title\">${hero.name}</div>\n          <img src=\"${this.imgNoDisponibleAPI === imgHero ? this.imgNoDisponibleLocal : imgHero}\" class=\"imagen-character\" />\n        </div>\n      </a>\n        `;\n      }\n    }\n\n    /**\n     * Estilos para el contenedor principal\n     */\n    contenedor.style.paddingTop = \"5rem\";\n    contenedor.style.borderRadius = \".8rem\";\n    contenedor.style.background = \"#3536367a\";\n    // Agregar el template literal al contenedor que deseamos mostrar la información\n    document.querySelector('#contenedorCards').innerHTML = templateHTML;\n  }\n\n  pintarComics(datos) {\n    const contenedor = document.getElementById('contenedorCards');\n    document.getElementById('title_marvel').style.display = \"none\";\n    console.log(datos);\n    let templateHTML = \"\";\n\n    for (const hero of datos.data.results) {\n\n      if (hero.thumbnail.path === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available\") {\n        continue;\n      } else {\n        let urlHero = hero.urls[0].url;\n        templateHTML += `\n            <a class=\"container-cards\" href=\"${urlHero}\" target=\"_blank\">\n              <div class=\"card\" style=\"width: 19rem;\" >\n                  <div class=\"card-title\">${hero.title}</div><br/>\n                    <img src=\"${hero.thumbnail.path}.${hero.thumbnail.extension}\" class=\"imagen-comics\" />\n                  <div class=\"mt-8\">\n                  <span class=\"items\">Páginas: ${hero.pageCount}</span><br/>\n                  <span class=\"items\">Formato: ${hero.format}</span>\n                  </div>\n              </div>\n            </a>\n          `;\n      }\n    }\n\n    /**\n     * Estilos para el contenedor principal\n     */\n    contenedor.style.paddingTop = \"5rem\";\n    contenedor.style.borderRadius = \".8rem\";\n    contenedor.style.background = \"#3536367a\";\n    // Agregar el template literal al contenedor que deseamos mostrar la información\n    document.querySelector('#contenedorCards').innerHTML = templateHTML;\n  }\n\n  pintarStories(datos) {\n    const contenedor = document.getElementById('contenedorCards');\n    document.getElementById('title_marvel').style.display = \"none\";\n    console.log(datos);\n    let templateHTML = \"\";\n\n    for (const hero of datos.data.results) {\n      let urlHero = hero.series.collectionURI;\n      templateHTML += `\n          <div class=\"card\" style=\"width: 19rem;\" >\n              <div class=\"card-title\">${hero.originalIssue.name}</div><br/>\n              <span class=\"items\">Descripción: ${hero.title}</span>\n          </div>\n        `;\n    }\n\n    /**\n     * Estilos para el contenedor principal\n     */\n    contenedor.style.paddingTop = \"5rem\";\n    contenedor.style.borderRadius = \".8rem\";\n    contenedor.style.background = \"#3536367a\";\n    // Agregar el template literal al contenedor que deseamos mostrar la información\n    document.querySelector('#contenedorCards').innerHTML = templateHTML;\n  }\n\n  pintarSeries(datos) {\n    const contenedor = document.getElementById('contenedorCards');\n    console.log(datos);\n    let templateHTML = \"\";\n\n    for (const hero of datos.data.results) {\n\n      if (hero.thumbnail.path === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available\") {\n        continue;\n      } else {\n        let urlHero = hero.urls[0].url;\n        let url2 = `${hero.characters.collectionURI}?ts=1&apikey=${environment.apikey}`;\n        let template2 = \"\";\n\n        fetch(url2)\n          .then(res => {\n            return res.json();\n          })\n          .then(dat => {\n            for (const c of dat.data.results) {\n              template2 += ` ${c.name},`;\n\n              templateHTML += `\n                <div class=\"card\" style=\"width: 19rem;\" >\n                    <div class=\"card-title\">${hero.title}</div><br/>\n                    <span class=\"items\">Año: ${hero.endYear}</span><br/>\n                    <span class=\"items\">Personajes: ${template2}</span><br/>\n                    <a href=\"${urlHero}\" target=\"blank\">\n                      <img src=\"${hero.thumbnail.path}.${hero.thumbnail.extension}\" class=\"imagen-comics\" target=\"_blank\" />\n                    </a>\n                </div>\n              `;\n\n              /**\n              * Estilos para el contenedor principal\n              */\n              contenedor.style.paddingTop = \"5rem\";\n              contenedor.style.borderRadius = \".8rem\";\n              contenedor.style.background = \"#3536367a\";\n              // Agregar el template literal al contenedor que deseamos mostrar la información\n              document.querySelector('#contenedorCards').innerHTML = templateHTML;\n\n            }\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      }\n    }\n  }\n\n  pintarCreators(datos) {\n    const contenedor = document.getElementById('contenedorCards');\n    document.getElementById('title_marvel').style.display = \"none\";\n    console.log(datos);\n    let templateHTML = \"\";\n\n    for (const hero of datos.data.results) {\n\n      if (hero.thumbnail.path === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available\") {\n        continue;\n      } else {\n        let urlHero = hero.urls[0].url;\n        templateHTML += `\n          <a class=\"container-cards\" href=\"${urlHero}\" target=\"blank\">\n            <div class=\"card\" style=\"width: 19rem;\" >\n              <div class=\"card-title\">${hero.firstName}</div>\n              <img src=\"${hero.thumbnail.path}.${hero.thumbnail.extension}\" class=\"imagen-comics\" target=\"_blank\" />\n            </div>\n          </a>\n        `;\n      }\n    }\n\n    /**\n     * Estilos para el contenedor principal\n     */\n    contenedor.style.paddingTop = \"5rem\";\n    contenedor.style.borderRadius = \".8rem\";\n    contenedor.style.background = \"#3536367a\";\n    // Agregar el template literal al contenedor que deseamos mostrar la información\n    document.querySelector('#contenedorCards').innerHTML = templateHTML;\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { ServicioAPIService } from './ServicioAPI/servicio-api.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  /**\n   * Cargar el servicio como parámetro del constructor para poder usar\n   * sus métodos internos\n   * @param datosMarvel \n   */\n  constructor(private datosMarvel: ServicioAPIService){}\n\n  title = 'Marvel';\n  \n  mostrar_menu(){\n    document.getElementById('menu_resp').style.display = 'block';\n  }\n\n  cerrar_menu(){\n    document.getElementById('menu_resp').style.display = 'none';\n  }\n  \n  /**\n   * Método para obtener el id del botón presionado en el aside.\n   * => Recibe como parámetro un event para saber en donde se disparo el event\n   *    y así obtener el Id de los botones\n   * @param e \n   */\n  botonPresionado (e) {\n    let item;\n\n    /**\n     * Los botones están compuestos por tags <li>\n     */\n    if(e.target.localName === \"li\") {\n      item = e.target.id;\n      console.log(item);\n    }\n\n    /**\n     * Llamar función obtenerDatosCompletosXItem del servicio DatosAPIService\n     * => Recibe como parámetro el item con el id obtenido\n     */\n    this.datosMarvel.construirUrl(item);\n  }\n\n}\n","<div id=\"menu_nav\">\n  <div id=\"div_log\">\n    <img id=\"logo\" src=\"./assets/Imagenes/shield_b.png\">\n  </div>\n  <div id=\"div_list_n\">\n    <!--Modificado-->\n    <ul id=\"list_nav\" (click)=\"botonPresionado($event)\">\n      <li id=\"comics\">\n        COMICS\n      </li>\n      <li id=\"creators\">\n        CREADORES\n      </li>\n      <li id=\"characters\">\n        PERSONAJES\n      </li>\n\n      <li id=\"stories\">\n        STORIES\n      </li>\n      <li id=\"series\">\n        SERIES\n      </li>\n      \n    </ul>\n  </div>\n  <div id=\"nom_app\">\n    <div id=\"titulo_app\">\n      <span>\n        HEROMARVEL\n      </span>\n    </div>\n  </div>\n</div>\n\n<div id=\"menu_nav2\">\n    <div id=\"div_log_s2\">\n      <img id=\"logo\" src=\"./assets/Imagenes/shield_b.png\">\n    </div>\n    <div id=\"title_app2\">\n      <span>\n        HEROMARVEL\n      </span>\n    </div>\n    <div id=\"img_menu\" (click)=\"mostrar_menu();\">\n      <div id=\"img\">\n        <img id=\"ico_menu\" src=\"./assets/Imagenes/menu.png\"/>\n      </div>\n    </div>\n  </div>\n\n  <div id=\"menu_resp\">\n    <div id=\"li_titulo_mr\">\n      <span id=\"titulo_mr\">\n        HEROMARVEL\n      </span>\n      <div id=\"img_close\" (click)=\"cerrar_menu();\">\n        <img src=\"./assets/Imagenes/close.png\" style=\"width: 10px;\" />\n      </div>\n    </div>\n    <ul id=\"ul_mr\" (click)=\"botonPresionado($event)\">\n      <li class=\"item_ul_mr\" id=\"characters\">\n        PERSONAJES\n      </li>\n      <li class=\"item_ul_mr\" id=\"comics\">\n        COMICS\n      </li>\n      <li class=\"item_ul_mr\" id=\"creators\">\n        CREADORES\n      </li>\n      \n      <li class=\"item_ul_mr\" id=\"stories\">\n        STORIES\n      </li>\n      <li class=\"item_ul_mr\" id=\"series\">\n        SERIES\n      </li>\n\n    </ul>\n  </div>\n\n<div id=\"contenido\">\n    <app-inicio></app-inicio>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { InicioComponent } from './inicio/inicio.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InicioComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.css']\n})\nexport class InicioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n}\n","<div id=\"slide_inicio\">\n\n<!-- Contenedor Section Principal -->\n<div class=\"contenedor1\">\n  <div class=\"contenedor2\" id=\"contenedorCards\">\n  </div>\n</div>\n\n</div>\n<div id=\"title_marvel\">\n  <span>\n    HEROMARVEL\n  </span>\n</div>","export const environment = {\n  production: false,\n  // Clave para consumir la API\n  apikey: '57af49e0876f7ff1c1145a1843a1089c&hash=4ea944eb957925a4f8d2ef14aa7adb9d'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}